{
    "io-000": [
        ["print(\"Hello World\")"]
    ],
    "io-100": [
        ["input(\"What is your name?\")"]
    ],

    "var-100": [
        ["x = 42"]
    ],
    "var-300": [
        ["a, b, c = [1, 2, 3]"]
    ],

    "num-000": [
        ["1 + 1"]
    ],
    "num-100": [
        ["1 - 1"]
    ],
    "num-200": [
        ["2 * 2"]
    ],
    "num-300": [
        ["2 / 2"]
    ],
    "num-400": [
        ["10 % 7"]
    ],
    "num-500": [
        ["2**3"]
    ],
    "num-600": [
        ["5 // 2"]
    ],

    "comp-000": [
        [
            "a is b",
            "a is not b"
        ]
    ],
    "comp-100": [
        [
            "a == b",
            "a != b"
        ]
    ],
    "comp-200": [
        [
            "a > b",
            "a < b"
        ]
    ],
    "comp-300": [
        [
            "a >= b",
            "a <= b"
        ]
    ],

    "bool-000": [
        [
            "True",
            "False"
        ]
    ],
    "bool-100": [
        ["not True"]
    ],
    "bool-200": [
        ["True and False"]
    ],
    "bool-300": [
        ["True or False"]
    ],
    "bool-400": [
        ["True ^ False"]
    ],

    "str-000": [
        [ "\"Hello World\""]
    ],
    "str-100": [
        [
            "(",
            "\"Hello\"",
            "\"World\"",
            ")"
        ],
        [
            "\"Hello\" + \\",
            "\"World\""
        ]
    ],
    "str-200": [
        [
            "\"\"\"",
            "\"Hello\"",
            "\"World\"",
            "\"\"\""
        ]
    ],
    "str-300": [
        ["\"Hello\" + \"World\""]
    ],
    "str-400": [
        ["f\"2 + 2 = {2 + 2}\""]
    ],

    "arr-000": [
        ["[1, 2, 3]" ]
    ],
    "arr-001": [
        ["[True, 42, \"Hello\"]" ]
    ],
    "arr-100": [
        ["arr.append(42)"]
    ],
    "arr-200": [
        ["arr.pop()"]
    ],
    "arr-300": [
        ["arr[0]"]
    ],
    "arr-400": [
        ["arr[-1]"]
    ],
    "arr-500": [
        ["arr.insert(\"Item\", 1)"]
    ],
    "arr-600": [
        ["del arr[1]"]
    ],
    "arr-700": [
        ["arr[1:10]"]
    ],
    "arr-800": [
        ["[1, 2] + [3, 4]"]
    ],
    "arr-900": [
        ["\"Item\" in arr"]
    ],
    "arr-901": [
        ["len(arr)"]
    ],

    "dict-000": [
        ["{\"answer\": 42}" ]
    ],
    "dict-100": [
        ["d[\"key\"] = 42" ]
    ],
    "dict-200": [
        ["d[\"key\"]" ]
    ],
    "dict-300": [
        ["d.keys()"]
    ],
    "dict-400": [
        ["d.values()"]
    ],
    "dict-500": [
        ["del d[\"key\"]"]
    ],
    "dict-600": [
        ["\"key\" in d"]
    ],
    "dict-700": [
        ["collections.defaultdict(lamda: \"default value\")"]
    ],

    "cond-000": [
        [
            "if 42 <= 10:",
            "    #do stuff",
            "elif 42 > 10:",
            "    #do stuff",
            "else:",
            "    #do stuff"
        ]
    ],
    "cond-100": [
        [ "\":D\" if answer == 42 else \":(\"" ]
    ],
    "cond-200": [
        [
            "try:",
            "    #do stuff",
            "    raise Exception",
            "except Exception as error:",
            "    #error handling"
        ]
    ],

    "loop-000": [
        [
            "for i in range(10):",
            "    # do stuff "
        ]
    ],
    "loop-100": [
        [
            "for fruit in [\"Mango\", \"Pear\"]:",
            "    # do stuff "
        ]
    ],
    "loop-200": [
        [
            "while i < 10:",
            "    # do stuff"
        ]
    ],
    "loop-500": [
        ["map(func, [1, 2, 3])"]
    ],
    "loop-600": [
        ["filter(func, [1, 2, 3])"]
    ],
    "loop-700": [
        ["functools.reduce(func, [1, 2, 3], initial_value)"]
    ],

    "func-100": [
        [
            "def func(a, b):",
            "    return a + b"
        ]
    ],
    "func-200": [
        [
            "func(40, 2)"
        ]
    ],
    "func-300": [
        [
            "def func(a, b, optional=0):",
            "   return a + b + optional"
        ]
    ],
    "func-400": [
        [
            "def func(*args, **kwargs):",
            "   print(args)",
            "   print(kwargs)",
            "",
            "func(1, 2, a=3, b=4)",
            "# output",
            "# -> [1, 2]",
            "# -> {'a': 3, 'b':4}"
        ]
    ],
    "func-500": [
        [
            "def func(a, b):",
            "   return a*2, b*2 ",
            "",
            "a2, b2 = func(1, 2)"
        ]
    ],
    "func-600": [
        [
            "lambda a, b: a + b"
        ]
    ],
    "func-700": [
        [
            "def func_a():",
            "   def func_b():",
            "       print(\"Hello\")",
            "   func_b()",
            "   print(\"World\")"
        ]
    ],

    "comprehension-list-000": [
        ["[letter for letter in \"Hello World\"]"]
    ]
}
