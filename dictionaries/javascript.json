{
    "io-000": [
        ["console.log(\"Hello World\")"]
    ],
    "io-100": [
        ["prompt(\"What is your name?\")"]
    ],

    "var-000": [
        ["let x"],
        ["var x"]
    ],
    "var-100": [
        ["let x = 42"]
    ],
    "var-200": [
        ["const x = 42"]
    ],
    "var-300": [
        ["[a, b, c] = [1, 2, 3]"]
    ],

    "num-000": [
        ["1 + 1"]
    ],
    "num-100": [
        ["1 - 1"]
    ],
    "num-200": [
        ["2 * 2"]
    ],
    "num-300": [
        ["2 / 2"]
    ],
    "num-400": [
        ["10 % 7"]
    ],
    "num-500": [
        ["2**3"]
    ],
    "num-600": [
        ["Math.floor(5 / 2)"]
    ],

    "comp-000": [
        [
            "a === b",
            "a !== b"
        ]
    ],
    "comp-100": [
        [
            "a == b",
            "a != b"
        ]
    ],
    "comp-200": [
        [
            "a > b",
            "a < b"
        ]
    ],
    "comp-300": [
        [
            "a >= b",
            "a <= b"
        ]
    ],

    "bool-000": [
        [
            "true",
            "false"
        ]
    ],
    "bool-100": [
        ["!true"]
    ],
    "bool-200": [
        ["true && false"]
    ],
    "bool-300": [
        ["true || false"]
    ],
    "bool-400": [],

    "str-000": [
        [ "\"Hello World\""]
    ],
    "str-100": [
        [
            "\"Hello\" +",
            "\"World\""
        ]
    ],
    "str-200": [
        [
            "`",
            "Hello",
            "World",
            "`"
        ]
    ],
    "str-300": [
        ["\"Hello\" + \"World\""]
    ],
    "str-400": [
        ["`2 + 2 = ${2 + 2}`"]
    ],

    "arr-010": [
        ["[1, 2, 3]" ]
    ],
    "arr-020": [
        ["[true, 42, \"Hello\"]" ]
    ],
    "arr-100": [
        ["arr.push(42)"]
    ],
    "arr-200": [
        ["arr.pop()"]
    ],
    "arr-300": [
        ["arr[0]"]
    ],
    "arr-400": [
        ["arr[arr.length - 1]"],
        ["arr.slice(-1)"]
    ],
    "arr-500": [
        ["arr.splice(1, 0, \"Item\")"]
    ],
    "arr-600": [
        ["arr.splice(1, 1);"]
    ],
    "arr-700": [
        ["arr.slice(1, 10)"]
    ],
    "arr-800": [
        ["[1, 2].concat([3, 4])"],
        ["[...[1, 2], ...[3, 4]]"]
    ],
    "arr-900": [
        ["arr.includes(\"Item\")"]
    ],
    "arr-901": [
        ["arr.length"]
    ],

    "dict-000": [
        ["{\"answer\": 42}" ]
    ],
    "dict-100": [
        ["d[\"key\"] = 42" ]
    ],
    "dict-200": [
        ["d[\"key\"]" ]
    ],
    "dict-300": [
        ["Object.keys(d)"]
    ],
    "dict-400": [
        ["Object.values(d)"]
    ],
    "dict-500": [
        ["delete d[\"key\"]"]
    ],
    "dict-600": [
        ["\"key\" in d"]
    ],

    "cond-000": [
        [
            "if (42 <= 10) {",
            "  //do stuff",
            "} else if (42 > 10) {",
            "  //do stuff",
            "} else {",
            "  //do stuff",
            "}"
        ]
    ],
    "cond-100": [
        [
            "(answer == 42) ? \":D\" : \":(\""
        ]
    ],
    "cond-200": [
        [
            "try {",
            "  //do stuff",
            "  throw \"Error\";",
            "} catch(err) {",
            "  //error handling",
            "}"
        ]
    ],
    "cond-300": [
        [
            "switch (mood){",
            "  case \":)\":",
            "    //do stuff",
            "    break;",
            "  default:",
            "    //do stuff",
            "}"
        ]
    ],

    "loop-000": [
        [
            "for (let i=0; i<10; i++){",
            "  // do stuff ",
            "}"
        ]
    ],
    "loop-100": [
        [
            "for (let fruit of [\"Mango\", \"Pear\"]){",
            "  // do stuff ",
            "}"
        ]
    ],
    "loop-200": [
        [
            "while (i < 10){",
            "  // do stuff ",
            "}"
        ]
    ],
    "loop-300": [
        [
            "do {",
            "  // do stuff ",
            "} while (i < 10)"
        ]
    ],
    "loop-400": [
        ["[1, 2, 3].forEach(func)"]
    ],
    "loop-500": [
        ["[1, 2, 3].map(func)"]
    ],
    "loop-600": [
        ["[1, 2, 3].filter(func)"]
    ],
    "loop-700": [
        [
            "[1, 2, 3].reduce(func, initial_value)"
        ]
    ],

    "func-100": [
        [
            "function func(a, b){",
            "    return a + b",
            "}"
        ]
    ],
    "func-200": [
        [
            "func(40, 2)"
        ]
    ],
    "func-300": [
        [
            "function func(a, b, optional=0){",
            "   return a + b + optional",
            "}"
        ]
    ],
    "func-400": [
        [
            "func func(...args){",
            "   console.log(args)",
            "}",
            "func(1, 2, a=3, b=4)",
            "// output",
            "// -> [1, 2, 3, 4]"
        ]
    ],
    "func-500": [
        [
            "function func(a, b){",
            "  return [a*2, b*2] ",
            "}",
            "[a2, b2] = func(1, 2)"
        ]
    ],
    "func-600": [
        [
            "(a, b) => a + b"
        ]
    ],
    "func-700": [
        [
            "func func_a(){",
            "  func func_b(){",
            "      console.log(\"Hello\")",
            "  }",
            "  func_b()",
            "  console.log(\"World\")",
            "}"
        ]
    ],

    "class-010": [
        ["class Person{}"]
    ],
    "class-020": [
        [
            "class Person{",
            "  constructor(name){",
            "    this.name = name",
            "}"
        ]
    ],
    "class-100": [
        ["new Person(\"John\")"]
    ],
    "class-200": [
        [
            "class Person{",
            "  constructor(name){",
            "    this.name = name",
            "  }",
            "  talk(){",
            "    console.log(\"My name is\"+ this.name)",
            "  }",
            "}"
        ]
    ],
    "class-220": [
        [
            "class Person{",
            "  static talk(){",
            "    console.log(\"Hello World\")",
            "  }",
            "}"
        ]
    ],
    "class-300": [
        [
            "p = new Person()",
            "p.talk()"
        ]
    ],
    "class-310": [
        [
            "Person.talk()"
        ]
    ],
    "class-400": [
        [
            "class Person{",
            "   let name = \"John\"",
            "}"
        ]
    ],
    "class-410": [
        [
            "class Person{",
            "  #median_age = 30",
            "  constructor(name){",
            "    this.#name = name",
            "}"
        ]
    ],
    "class-500": [
        [
            "class Person{",
            "  constructor(name){",
            "    this.name = name",
            "  }",
            "  get name(){",
            "     return this.name",
            "  }",
            "}"
        ]
    ],
    "class-510": [
        [
            "class Person{",
            "  constructor(name){",
            "    this.name = name",
            "  }",
            "  set name(value){",
            "     this.name = value",
            "  }",
            "}"
        ]
    ],
    "class-600": [
        [
            "class Person{",
            "  constructor(name){",
            "    this.name = name",
            "  }",
            "}",
            "class Pilot extends Person:",
            "  constructor(name, airline) {",
            "    super(name);",
            "    this.airline = airline;",
            "  }",
            "}"
        ]
    ]
}
